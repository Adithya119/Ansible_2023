- name: New App
  hosts: all
  become: yes
  tasks:

    - name: Register Microsoft key and feed - 1/2
      get_url:
        url: https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
        dest: /home/ansible/
      notify:
        - Register Microsoft key and feed -2/2

    - name: Install the .NET Core Runtime
      package:
        update_cache: yes
        name:                         ## you can run a loop here
          - apt-transport-https
          - aspnetcore-runtime-3.1
        state: present

    - name: Install MySql Server
      package:
        name: mysql-server
        state: present

    - name: Install nginx
      package:
        name: nginx
        state: present

    - name: Start nginx service
      service:
        name: nginx
        state: started
      notify:
        - output the nginx status command
        - print nginx status

    - name: Nginx *config change* to forward requests to ASP.NET
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          # Default server configuration
          #
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name   nopCommerce-430.com;    

              location / {
              proxy_pass         http://localhost:5000;
              proxy_http_version 1.1;
              proxy_set_header   Upgrade $http_upgrade;
              proxy_set_header   Connection keep-alive;
              proxy_set_header   Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header   X-Forwarded-Proto $scheme;
              }

          # SSL configuration
          #
          # listen 443 ssl default_server;
          # listen [::]:443 ssl default_server;
          #
          # Note: You should disable gzip for SSL traffic.
          # See: https://bugs.debian.org/773332
          #
          # Read up on ssl_ciphers to ensure a secure configuration.
          # See: https://bugs.debian.org/765782
          #
          # Self signed certs generated by the ssl-cert package
          # Don't use them in a production server!
          #
          # include snippets/snakeoil.conf;
          }
      notify:
        - Restart nginx

    - name: create nop directory
      file:
        path: /var/www/nopCommerce440
        state: directory

    - name:  download nop
      get_url:
        url: https://github.com/nopSolutions/nopCommerce/releases/download/release-4.40.4/nopCommerce_4.40.4_NoSource_linux_x64.zip
        dest: /var/www/nopCommerce440  
    
    - name: install unzip package
      package:
        name: unzip
        state: present

    - name: Unzip nop file
      unarchive: 
        remote_src: yes
        src: /var/www/nopCommerce440/nopCommerce_4.40.4_NoSource_linux_x64.zip
        dest: /var/www/nopCommerce440

    - name: create bin and logs directory in a loop
      shell: mkdir "{{ item }}"
      with_items:
        - /var/www/nopCommerce440/bin
        - /var/www/nopCommerce440/logs
      ignore_errors: yes

    - name: change ownership to www-data
      file: 
        path: nopCommerce440/
        owner: www-data
        group: www-data
        recurse: yes
        state: directory

    - name: create nopCommerce440.service
      copy:
        dest: /etc/systemd/system/nopCommerce440.service
        content: |
          [Unit]
          Description=Example nopCommerce app running on XUbuntu

          [Service]
          WorkingDirectory=/var/www/nopCommerce440
          ExecStart=/usr/bin/dotnet /var/www/nopCommerce440/Nop.Web.dll
          Restart=always
          # Restart service after 10 seconds if the dotnet service crashes:
          RestartSec=10
          KillSignal=SIGINT
          SyslogIdentifier=nopCommerce440-example
          User=www-data
          Environment=ASPNETCORE_ENVIRONMENT=Production
          Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false

          [Install]
          WantedBy=multi-user.target

    - name: Start nopCommerce440 service
      service:
        name: nopCommerce440.service
        state: started
        enabled: yes
      notify:
        - output the nopCommerce440 status command
        - print nopCommerce440 service status
        - Restart nginx


  
  handlers:
    - name: Register Microsoft key and feed -2/2
      dpkg_selections:
        name: packages-microsoft-prod.deb
        selection: install

    - name: output the nginx status command
      shell: sudo systemctl status nginx
      register: output

    - name: print nginx status
      debug:
        msg: "{{ output.stdout_lines }}"

    - name: output the nopCommerce440 status command
      shell: sudo systemctl status nopCommerce440.service
      register: abc

    - name: print nopCommerce440 service status
      debug:
        msg: "{{ abc.stdout_lines }}"

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
        enabled: yes